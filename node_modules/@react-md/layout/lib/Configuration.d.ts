import { FC, ReactNode } from "react";
import { ConfigurableIcons } from "@react-md/icon";
import { FormThemeOptions } from "@react-md/form";
import { StatesConfigProps } from "@react-md/states";
import { AppSizeListenerProps, AppSizeOptions } from "@react-md/utils";
export interface ConfigurationProps extends AppSizeOptions, StatesConfigProps {
    /**
     * An optional function to call when the app gets resized based on media
     * queries.  This is useful if you want to store the current app state in
     * redux if you can't always access this state with the `useAppSize` hook.
     */
    onAppResize?: AppSizeListenerProps["onChange"];
    /**
     * Boolean if the default tooltip hover mode should be disabled.
     */
    disableTooltipHoverMode?: boolean;
    /**
     * The default delay before the tooltip hover mode is enabled.
     */
    tooltipDefaultDelay?: number;
    /**
     * The delay before the tooltip should become visible.
     */
    tooltipDelayTimeout?: number;
    /**
     * The children that should gain this configuration. This is required since
     * there's really no reason to use this component if you don't have children
     * that consume the React context.
     */
    children: ReactNode;
    /**
     * An object of all the configurable icons that you want to override
     * throughout react-md.
     */
    icons?: ConfigurableIcons;
    /**
     * An object of any overrides for the `FormThemeProvider`.
     */
    formTheme?: FormThemeOptions;
}
/**
 * This component allows you to quickly configure different functionality within
 * `react-md` in one place with reasonable defaults.
 */
declare const Configuration: FC<ConfigurationProps>;
export default Configuration;
