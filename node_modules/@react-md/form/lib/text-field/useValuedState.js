"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
var utils_1 = require("@react-md/utils");
/**
 * This is a small hook that will enable a valued flag when the value
 * of a text input or a textarea has a length greater than 0.
 *
 * @private
 */
function useValuedState(_a) {
    var onChange = _a.onChange, value = _a.value, defaultValue = _a.defaultValue;
    var handler = utils_1.useRefCache(onChange);
    var _b = utils_1.useToggle(function () {
        if (typeof value === "undefined") {
            return (typeof defaultValue === "number" || (defaultValue || "").length > 0);
        }
        // this isn't used for controlled components
        return false;
    }), valued = _b[0], enable = _b[1], disable = _b[2];
    var handleChange = react_1.useCallback(function (event) {
        var onChange = handler.current;
        if (onChange) {
            onChange(event);
        }
        if (event.currentTarget.value.length > 0) {
            enable();
        }
        else {
            disable();
        }
    }, 
    // disabled since useRefCache
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [enable, disable]);
    if (typeof value !== "undefined") {
        var isValued = typeof value === "number" || value.length > 0;
        return [isValued, onChange];
    }
    return [valued, handleChange];
}
exports.default = useValuedState;
//# sourceMappingURL=useValuedState.js.map