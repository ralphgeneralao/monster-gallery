import React, { useMemo } from "react";
import { DEFAULT_TOOLTIP_DELAY } from "./constants";
import { HoverModeActions, HoverModeDelay, HoverModeEnabled, useTooltipHoverModeState, } from "./useTooltipHoverMode";
/**
 * This component is used so that tooltips can gain the "hover mode"
 * functionality in that once a tooltip has become visible by hover, all other
 * tooltips will become visible immediately until 3 seconds have passed.
 */
function TooltipHoverModeConfig(_a) {
    var _b = _a.defaultDelay, defaultDelay = _b === void 0 ? DEFAULT_TOOLTIP_DELAY : _b, _c = _a.delayTimeout, delayTimeout = _c === void 0 ? DEFAULT_TOOLTIP_DELAY : _c, _d = _a.enabled, enabled = _d === void 0 ? true : _d, children = _a.children;
    var _e = useTooltipHoverModeState(defaultDelay, delayTimeout), delay = _e.delay, enable = _e.enable, startDisableTimer = _e.startDisableTimer;
    var actions = useMemo(function () { return ({
        enable: enable,
        startDisableTimer: startDisableTimer,
    }); }, [enable, startDisableTimer]);
    return (React.createElement(HoverModeDelay.Provider, { value: delay },
        React.createElement(HoverModeActions.Provider, { value: actions },
            React.createElement(HoverModeEnabled.Provider, { value: enabled }, children))));
}
if (process.env.NODE_ENV !== "production") {
    try {
        var PropTypes = require("prop-types");
        TooltipHoverModeConfig.propTypes = {
            enabled: PropTypes.bool,
            delayTimeout: PropTypes.number,
            defaultDelay: PropTypes.number,
            children: PropTypes.node.isRequired,
        };
    }
    catch (e) { }
}
export default TooltipHoverModeConfig;
//# sourceMappingURL=TooltipHoverModeConfig.js.map